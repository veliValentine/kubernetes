name: Deploy project

on:
  push:

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: dwk-cluster
  GKE_ZONE: europe-north1-b
  IMAGE: todo-app-image

jobs:
  build-publish-deploy:
    name: Build, Publish and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GKE_PROJECT }}
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          export_default_credentials: true
      - name: Auth gcloud image registery
        run: gcloud --quiet auth configure-docker
      - name: Set kubectl access to cluster
        run: gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

      - name: Build todo-app
        working-directory: ./todo-app
        run: |-
          docker build \
            --tag "gcr.io/$PROJECT_ID/$IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA" \
            .
      - name: Publish todo-app
        run: |-
          docker push "gcr.io/$PROJECT_ID/$IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA"

      - name: setup sops
        uses: mdgreenwald/mozilla-sops-action@v1.2.0
      - name: Decrypt secrets
        run: |-
          echo ${{ secrets.AGE_SECRET_KEY }} > key.txt \
          && SOPS_AGE_KEY_FILE=key.txt sops --decrypt secrets/manifest/todo.secret.enc.yaml > secrets/manifest/todo.secret.yaml

      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v1

      - name: get branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Deploy
        env:
          NAMESPACE: ${{ steps.extract_branch.outputs.branch }}
        run: |-
          kubectl create namespace $NAMESPACE || true
          kubectl config set-context --current --namespace=$NAMESPACE
          kustomize edit set namespace $NAMESPACE
          kustomize edit set image todo-app-image=gcr.io/$PROJECT_ID/$IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA
          kubectl apply -k .
          kubectl rollout status deployment todo-app-dep -n $NAMESPACE
          kubectl get services -o wide -n $NAMESPACE
